openapi: 3.1.1
info:
    title: JustLend DAO API
    version: 1.0.0


servers:
    - url: https://openapi.just.network
    - url: '{protocol}://openapi.just.network/{path}'
      description: Responds with your request data.
      variables:
          protocol:
              enum:
                  - https
              default: https
          path:
              default: ''

tags:
    - name: Supply and Borrow Market
    - name: Staked TRX Market and Energy Rental

paths:
    '/lend/jtoken':
        get:
            tags:
                - Supply and Borrow Market
            summary: Get Supply and Borrow Market Information
            description: Query to get all the supply and borrow market information, which includes token information of each market.
            parameters:
                - '$ref': '#/components/parameters/noParameters'
            responses:
                '200':
                    description: Return the list of market information.
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    code:
                                        type: integer
                                        description: Status code of the response, 0 means success.
                                        examples:
                                            - 0
                                    data:
                                        type: object
                                        description: Token information of each market.
                                        properties:
                                            tokenList:
                                                type: array
                                                items:
                                                    '$ref': '#/components/schemas/tokenList'
                                    message:
                                        type: string
                                        description: Response message, eg.SUCCESS.
                                        examples:
                                            - SUCCESS
                '400':
                    description: Bad Request
                    content:
                        application/json:
                            schema:
                                '$ref': '#/components/responses/BadRequest'
    '/lend/account':
        get:
            tags:
                - Supply and Borrow Market
            summary: Get Account Information
            description: Query to get the SBM user account information. (To pass parameters to obtain specific information, please click 「Test」and fill in the address information in the Query parameters section.)
            parameters:
                - '$ref': '#/components/parameters/addresses'
                - '$ref': '#/components/parameters/minBorrowValueInTrx'
                - '$ref': '#/components/parameters/maxHealth'
                - '$ref': '#/components/parameters/pageNo'
                - '$ref': '#/components/parameters/pageSize'
            responses:
                '200':
                    description: Return the list of user account information.
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    code:
                                        type: integer
                                        description: Status code of the response, 0 means success.
                                        examples:
                                            - 0
                                    data:
                                        type: object
                                        description: User token information.
                                        properties:
                                            totalPage:
                                                type: integer
                                                description: Total number of pages.
                                            list:
                                                type: array
                                                items:
                                                    '$ref': '#/components/schemas/list'
                                            totalCount:
                                                type: integer
                                                description: Total count of user tokens.
                                    message:
                                        type: string
                                        description: Response message, eg.SUCCESS.
                                        examples:
                                            - SUCCESS
                '400':
                    description: Bad Request
                    content:
                        application/json:
                            schema:
                                '$ref': '#/components/responses/BadRequest'
    '/mining/reward':
        get:
            tags:
                - Supply and Borrow Market
            summary: Get User Supply Mining Reward Information
            description: Query to get user's the latest usdd mining reward information, which includes the current mining phase and its rewards, mining start time and end time. （To pass parameters to obtain specific information, please click 「Test」and fill in the address information in the Query parameters section）
            operationId: getAddress
            security:
                - {}
            parameters:
                - '$ref': '#/components/parameters/address'
                - '$ref': '#/components/parameters/address1'
            responses:
                '200':
                    description: Returns the user's supply mining reward information.
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    code:
                                        type: integer
                                        description: Status code of the response, 0 means success.
                                        examples:
                                            - 0
                                    data:
                                        type: object
                                        description: Reward information for each pool.
                                        properties:
                                            TKFRELGGoRgiayhwJTNNLqCNjFoLBh3Mnf:
                                                type: object
                                                '$ref': '#/components/schemas/USDD'
                                    message:
                                        type: string
                                        description: Response message, eg.SUCCESS.
                                        examples:
                                            - SUCCESS
                '400':
                    description: Bad Request
                    content:
                        application/json:
                            schema:
                                '$ref': '#/components/responses/BadRequest'
    '/mining/apy':
        get:
            tags:
                - Supply and Borrow Market
            summary: Get Market Mining APY Information
            description: Query to get the mining APY information of each market's USDD rewards. The Mining APY for each market will be adjusted according to market conditions. Currently, the supply mining activities are mainly in the USDD market, and new markets may be added in the future based on market demand.
            parameters:
                - '$ref': '#/components/parameters/noParameters'
            responses:
                '200':
                    description: Return the mining APY information of each market's USDD rewards.
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    code:
                                        type: integer
                                        description: Status code of the response, 0 means success.
                                        examples:
                                            - 0
                                    data:
                                        type: object
                                        description: Mining APY information of each market.
                                        properties:
                                            TKFRELGGoRgiayhwJTNNLqCNjFoLBh3Mnf:
                                                type: object
                                                '$ref': '#/components/schemas/USDDapy'
                                    message:
                                        type: string
                                        description: Response message, eg.SUCCESS.
                                        examples:
                                            - SUCCESS
                '400':
                    description: Bad Request
                    content:
                        application/json:
                            schema:
                                '$ref': '#/components/responses/BadRequest'
    '/mining/distributions':
        get:
            tags:
                - Supply and Borrow Market
            summary: Get User Supply Mining Reward Distributions
            description: Query to get user's all reward distributions, including mining token address, if the mining reward has been claimed or not claimed, and the reward amount in the corresponding cycle. (To pass parameters to obtain specific information, please click 「Test」and fill in the address information in the Query parameters section.)
            operationId: getAddress
            security:
                - {}
            parameters:
                - '$ref': '#/components/parameters/address'
                - '$ref': '#/components/parameters/address1'
            responses:
                '200':
                    description: Return the user's all reward cycles, including those that have been claimed and those that have not been claimed. Filter out the cycles where claimed is false, that is, the unclaimed reward cycles.
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    code:
                                        type: integer
                                        description: Status code of the response, 0 means success.
                                        examples:
                                            - 0
                                    data:
                                        type: object
                                        description: Reward information for each mining period.
                                        properties:
                                            Phase 22:
                                                type: object
                                                description: The phase of 22nd supply mining reward information
                                                '$ref': '#/components/schemas/rewardDistribution'
                                    message:
                                        type: string
                                        description: Response message, eg.SUCCESS.
                                        examples:
                                            - SUCCESS
                '400':
                    description: Bad Request
                    content:
                        application/json:
                            schema:
                                '$ref': '#/components/responses/BadRequest'
    '/lend/strx':
        get:
            tags:
                - Staked TRX Market and Energy Rental
            summary: Get Staked TRX and Energy Rental Markets Information
            description: Query to get all the the sTRX staking and energy rental markets information.
            parameters:
                - '$ref': '#/components/parameters/noParameters'
            responses:
                '200':
                    description: Return  the sTRX staking and energy rental markets information.
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    code:
                                        type: integer
                                        description: Status code of the response, 0 means success.
                                        examples:
                                            - 0
                                    data:
                                        type: object
                                        description: Rent and stake information.
                                        properties:
                                            rentInfo:
                                                '$ref': '#/components/schemas/rentInfo'
                                            stakeInfo:
                                                '$ref': '#/components/schemas/stakeInfo'
                                    message:
                                        type: string
                                        description: Response message, eg.SUCCESS.
                                        examples:
                                            - SUCCESS
                '400':
                    description: Bad Request
                    content:
                        application/json:
                            schema:
                                '$ref': '#/components/responses/BadRequest'
    '/lend/strxStake/account':
        get:
            tags:
                - Staked TRX Market and Energy Rental
            summary: Get user data of sTRX liquidity staking
            description: Query to get the list of user sTRX staking information.
            parameters:
                - '$ref': '#/components/parameters/addresses'
                - '$ref': '#/components/parameters/pageNo'
                - '$ref': '#/components/parameters/pageSize'
                - '$ref': '#/components/parameters/minStrxBalance'
            responses:
                '200':
                    description: Returns the list of user sTRX staking information.
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    code:
                                        type: integer
                                        description: Status code of the response, 0 means success.
                                        examples:
                                            - 0
                                    data:
                                        type: object
                                        description: User staking sTRX information.
                                        properties:
                                            totalPage:
                                                type: integer
                                                description: Total number of pages.
                                            list:
                                                '$ref': '#/components/schemas/stakeList'
                                            totalCount:
                                                type: integer
                                                description: Total count of records.
                                    message:
                                        type: string
                                        description: Response message, eg.SUCCESS.
                                        examples:
                                            - SUCCESS
                '400':
                    description: Bad Request
                    content:
                        application/json:
                            schema:
                                '$ref': '#/components/responses/BadRequest'
    '/lend/rentResource/account':
        get:
            tags:
                - Staked TRX Market and Energy Rental
            summary: Get user data of resource rent (only supports Energy Rental currently)
            description: Query to get the list of user energy rental information.
            parameters:
                - '$ref': '#/components/parameters/addresses'
                - '$ref': '#/components/parameters/pageNo'
                - '$ref': '#/components/parameters/pageSize'
                - '$ref': '#/components/parameters/minStrxBalance'
                - '$ref': '#/components/parameters/maxRemainingRentAmount'
            responses:
                '200':
                    description: Returns the list of user energy rental information.
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    code:
                                        type: integer
                                        description: Status code of the response, 0 means success.
                                        examples:
                                            - 0
                                    data:
                                        type: object
                                        description: User rent information.
                                        properties:
                                            totalPage:
                                                type: integer
                                                description: Total number of pages.
                                            list:
                                                '$ref': '#/components/schemas/rentList'
                                            totalCount:
                                                type: integer
                                                description: Total count of records.
                                    message:
                                        type: string
                                        description: Response message, eg.SUCCESS.
                                        examples:
                                            - SUCCESS
                '400':
                    description: Bad Request
                    content:
                        application/json:
                            schema:
                                '$ref': '#/components/responses/BadRequest'

components:
    parameters:
        noParameters:
            name: No Parameters.
            in: query
        minBorrowValueInTrx:
            name: minBorrowValueInTrx
            in: query
            description: Query the minimum value of borrowed asset in TRX.
            required: false
            schema:
                type: string
        maxHealth:
            name: maxHealth
            in: query
            description: Query the max health level
            required: false
            schema:
                type: string
        pageNo:
            name: pageNo
            in: query
            description: Page number.
            required: false
            schema:
                type: integer
                format: int64
        pageSize:
            name: pageSize
            in: query
            description: Page size, maximum 1000.
            required: false
            schema:
                type: integer
                format: int64
        address:
            name: address
            in: path
            description: Query of the user address.
            required: ture
            schema:
                type: string
        addresses:
            name: addresses
            in: query
            description: Query of the user addresses. (To query multiple addresses at the same time, please use ‘,’ to separate multiple addresses.)
            required: ture
            schema:
                type: string
        address1:
            name: address
            in: query
            description: Query of the user address.
            required: ture
            schema:
                type: string
        minStrxBalance:
            name: minStrxBalance
            in: query
            description: Minimum amount of sTRX held.
            required: false
            schema:
                type: string
        maxRemainingRentAmount:
            name: maxRemainingRentAmount
            in: query
            description: Maximum remaining rent amount.
            required: false
            schema:
                type: string

    responses:
        BadRequest:
            description: Bad Request
            content:
                application/json:
                    schema:
                        '$ref': '#/components/schemas/Error'
        Forbidden:
            description: Forbidden
            content:
                application/json:
                    schema:
                        '$ref': '#/components/schemas/Error'
        NotFound:
            description: NotFound
            content:
                application/json:
                    schema:
                        '$ref': '#/components/schemas/Error'
        Unauthorized:
            description: Unauthorized
            content:
                application/json:
                    schema:
                        '$ref': '#/components/schemas/Error'

    schemas:
        tokenList:
            type: object
            properties:
                address:
                    type: string
                    description: The address of the market.
                    examples:
                        - TE2RzoSV3wFK99w6J9UnnZ4vLfXYoxvRwP
                borrowIndex:
                    type: integer
                    description: The borrow index of the market.
                    format: int64
                    examples:
                        - 1224530412174750380
                borrowRate:
                    type: integer
                    description: The current borrow rate of the market.
                    format: int64
                    examples:
                        - 0.064673716541040000
                cash:
                    type: integer
                    description: The available cash amount.
                    format: int64
                    examples:
                        - 349909392.537020000000000000
                collateralFactor:
                    type: integer
                    description: The collateral factor for the market.
                    format: int64
                    examples:
                        - 0.750000000000000000
                exchangeRate:
                    type: integer
                    description: The current exchange rate.
                    format: int64
                    examples:
                        - 0.010448063811832339
                reserveFactor:
                    type: integer
                    description: The reserve factor for the market.
                    format: int64
                    examples:
                        - 0.100000000000000000
                reserves:
                    type: integer
                    description: The total reserves held.
                    format: int64
                    examples:
                        - 2300647.881336000000000000
                supplyRate:
                    type: integer
                    description: The current supply rate.
                    format: int64
                    examples:
                        - 0.009044500002192000
                symbol:
                    type: string
                    description: The symbol of the market.
                    examples:
                        - jTRX
                totalBorrows:
                    type: integer
                    description: The total amount borrowed.
                    format: int64
                    examples:
                        - 63951044.565948000000000000
                totalSupply:
                    type: integer
                    description: The total supply of the asset.
                    examples:
                        - 39391010299.49149122
                underlyingAddress:
                    type: string
                    description: The underlying asset's address.
                    examples:
                        - T9yD14Nj9j7xAB4dbGeiX9h8unkKHxuWwb
                underlyingDecimal:
                    type: integer
                    description: The decimal places for the underlying market, which is 18.
                    format: int64
                    examples:
                        - 6
                underlyingPriceInTrx:
                    type: integer
                    description: The price of the underlying market in TRX.
                    format: int64
                    examples:
                        - 1.000000000000000000000000
                underlyingSymbol:
                    type: string
                    description: The symbol of the underlying market.
                    examples:
                        - TRX
        list:
            type: object
            properties:
                addresses:
                    type: string
                    description: User's wallet addresses.
                    examples:
                        - T9yD14Nj9j7xAB4dbGeiX9h8unkKHxuWwb
                health:
                    type: integer
                    description: Health factor of the account.
                    format: int64
                    examples:
                        - 5.88
                liquidateStatusStartTime:
                    type: string
                    format: date-time
                    nullable: true
                    description: Start time of liquidation status.
                tokens:
                    '$ref': '#/components/schemas/tokens'
                totalBorrowValueInTrx:
                    type: integer
                    description: Total borrowed value in TRX.
                    format: int64
                    examples:
                        - 11.277370
                totalCollateralValueInTrx:
                    type: integer
                    description: Total collateral value in TRX.
                    format: int64
                    examples:
                        - 24.126681
        tokens:
            type: array
            items:
                type: object
                properties:
                    address:
                        type: string
                        description: Token contract address.
                        examples:
                            - TNSBA6KvSvMoTqQcEgpVK7VhHT3z7wifxy
                    borrowBalanceUnderlying:
                        type: integer
                        description: Borrowed balance of the token in underlying units.
                        format: int64
                        examples:
                            - 0.704372293431165977793198
                    entered:
                        type: integer
                        description: Indicates if the token is entered into the market (1 or 0).
                        format: int64
                        examples:
                            - 1
                    supplyBalanceJtoken:
                        type: integer
                        description: Supplied balance in JToken units.
                        format: int64
                        examples:
                            - 1.09062037
                    supplyBalanceUnderlying:
                        type: integer
                        description: Supplied balance in underlying units.
                        format: int64
                        examples:
                            - 0.01148891329334797277745383
                    underlyingSymbol:
                        type: string
                        description: Symbol of the underlying asset.
                        examples:
                            - USDD
        USDD:
            type: object
            properties:
                currEndTime:
                    type: string
                    format: date-time
                    description: Current phase end time.
                currPhase:
                    type: integer
                    description: Current phase number.
                    format: int64
                    examples:
                        - 64
                currReward:
                    type: integer
                    description: Current phase reward.
                    format: int64
                    examples:
                        - 0.0000
                currRewardStatus:
                    type: integer
                    description: Current phase reward status.
                    format: int64
                    examples:
                        - 1
                currStartTime:
                    type: string
                    format: date-time
                    description: Current phase start time.
                lastEndTime:
                    type: string
                    format: date-time
                    description: Last phase end time.
                lastReward:
                    type: integer
                    description: Last reward amount.
                    format: int64
                    examples:
                        - 0
                lastRewardStatus:
                    type: integer
                    description: Status of the last reward.
                    format: int64
                    examples:
                        - 2
                lastStartTime:
                    type: string
                    format: date-time
                    description: Last phase start time.
                price:
                    type: integer
                    description: Price of the asset.
                    format: int64
                    examples:
                        - 1.000000000000000000
        USDDapy:
            type: object
            properties:
                USDD:
                    type: integer
                    description: USDD market apy.
                    format: int64
                    example:
                        - 0.09175706
        rewardDistribution:
            type: object
            properties:
                tokenAddress:
                    type: string
                    description: The supply mining market address.
                    examples:
                        - TPYmHEhy5n8TCEfYGqW2rPxsghSfzghPDn
                amount:
                    type: string
                    description: The amount of mining reward can be claimed in this phase, in hexadecimal format.
                    examples:
                        - :0x6933158b3c05
                claimed:
                    type: boolean
                    description: Indicates if this phase reward has been claimed. Ture means claimed, false means not yet.
                index:
                    type: string
                    description: Index in hexadecimal format.
                    examples:
                        - :0x0659
                merkleIndex:
                    type: string
                    description: Merkle index in hexadecimal format.
                    examples:
                        - :0x00
                proof:
                    type: array
                    description: Merkle proof element in hexadecimal format, which used to proof this phase reward belong to user.
                    items:
                        '$ref': '#/components/schemas/proofs'
                merkleRoot:
                    type: string
                    description: Merkle root in hexadecimal format.
                    examples:
                        - :0x3fdc21ab4fed9e13714fa852ff2e659f9e32af553f4426810ff75e38ccf17a97
        proofs:
            type: array
            items:
                type: string
                example:
                    - :0x6b734d20b9ca2a0dda57b184789dbb6df2d2993049a9365b6eafe932cd435255
        rentInfo:
            type: object
            properties:
                priceFor10KEnergByBurn:
                    type: integer
                    format: int64
                    examples:
                        - 4.20000000
                priceFor10KEnergByRent:
                    type: integer
                    format: int64
                    examples:
                        - 0.65530713
                priceFor10KEnergByStake:
                    type: integer
                    format: int64
                    examples:
                        - 885.28697646
                rentMarketAddress:
                    type: string
                    examples:
                        - TU2MJ5Veik1LRAgjeSzEdvmDYx7mefJZvd
                totalDelegatedEnergyRate:
                    type: integer
                    format: int64
                    examples:
                        - 0.03254970
                totalDelegatedEnergyTrx:
                    type: integer
                    format: int64
                    examples:
                        - 162748507.908930
        stakeInfo:
            type: object
            properties:
                decimal:
                    type: integer
                    format: int64
                    examples:
                        - 18
                exchangeRate:
                    type: integer
                    format: int64
                    examples:
                        - 1.181813870419231022
                rentReserveFactor:
                    type: integer
                    format: int64
                    examples:
                        - 0.200000000000000000
                reserse:
                    type: integer
                    format: int64
                    examples:
                        - 71933070.321420
                rewardReserveFactor:
                    type: integer
                    format: int64
                    examples:
                        - 0.200000000000000000
                strxAddress:
                    type: string
                    examples:
                        - TU3kjFuhtEo42tsCBtfYUAZxoqQ4yuSLQ5
                supplyRate:
                    type: integer
                    format: int64
                    examples:
                        - 0.03937302
                symbol:
                    type: string
                    examples:
                        - sTRX
                totalSupply:
                    type: integer
                    format: int64
                    examples:
                        - 6553955254.250487546804870562
                totalSupplyUsd:
                    type: integer
                    format: int64
                    examples:
                        - 1729932328.75828661
                totalUnderlying:
                    type: integer
                    format: int64
                    examples:
                        - 7745555225.580224
                trxPrice:
                    type: integer
                    format: int64
                    examples:
                        - 0.223345167438102719
                underlyingDecimal:
                    type: integer
                    format: int64
                    examples:
                        - 6
        stakeList:
            type: array
            items:
                type: object
                properties:
                    addresses:
                        type: string
                        description: User's wallet addresses.
                        examples:
                            - TU3kjFuhtEo42tsCBtfYUAZxoqQ4yuSLQ5
                    availableWithdrawAmount:
                        type: integer
                        format: int64
                        description: Available amount for withdrawal.
                        examples:
                            - 150865439.643028
                    unstakingAmount:
                        type: integer
                        format: int64
                        description: The amount of unstaking trx.
                        examples:
                            - 24120999.583032
                    sTRXBalance:
                        type: integer
                        format: int64
                        description: The amount of sTRXBalance.
                        examples:
                            - 1.000000000000000000
        rentList:
            type: array
            items:
                type: object
                properties:
                    rentRemainAmount:
                        type: integer
                        format: int64
                        description: Remaining amount of rent.
                        examples:
                            - 0.000000
                    receiver:
                        type: string
                        description: Wallet address of the receiver.
                        examples:
                            - TWdWEHRLPBVGsXhwjSUv45XwnsfUHXydJa
                    delegatedAmount:
                        type: integer
                        format: int64
                        description: Amount delegated for rent.
                        examples:
                            - 0.000000
                    rentAmountPerDay:
                        type: integer
                        format: int64
                        description: Rent amount per day.
                        examples:
                            - 0.000000
                    rentType:
                        type: string
                        description: Type of rent (e.g., Energy).
                        examples:
                            - Energy
                    renter:
                        type: string
                        description: Wallet address of the renter.
                        examples:
                            - TWdWEHRLPBVGsXhwjSUv45XwnsfUHXydJa

        Error:
            type: object
            description: RFC 7807
            properties:
                type:
                    type: string
                    examples:
                        - https://example.com/errors/generic-error
                title:
                    type: string
                    examples:
                        - Something went wrong here.
                status:
                    type: integer
                    format: int64
                    examples:
                        - 403
                detail:
                    type: string
                    examples:
                        - Unfortunately, we can’t provide further information.
